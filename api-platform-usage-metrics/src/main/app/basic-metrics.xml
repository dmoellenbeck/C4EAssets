<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

	<flow name="getTotalAssets">
		<dw:transform-message doc:name="Initialize variables">
			<dw:input-payload mimeType="application/java" />
			<dw:set-variable resource="classpath:variables/init-offset-variable.dwl" variableName="offset" />
			<dw:set-variable resource="classpath:variables/init-limit-variable.dwl" variableName="limit" />
			<dw:set-variable resource="classpath:variables/init-assetsList-variable.dwl" variableName="assetsList" />
		</dw:transform-message>
		<flow-ref name="getExchangePage" doc:name="getExchangePage" />
		<dw:transform-message doc:name="Set exchangeAssets variable">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
%var total = sizeOf flowVars.assetsList
%var assets = flowVars.assetsList
---
({ "Total": total } ++
(assets groupBy $.type mapObject (v, k) -> {
  (capitalize pluralize k): sizeOf v
})) when total > 0 otherwise {}
]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="getExchangePage">
		<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.exchange.uri}" method="GET" doc:name="getTotalExchangeAssets">
			<http:request-builder>
				<http:query-param paramName="organizationId" value="#[flowVars.rootOrgId]" />
				<http:query-param paramName="offset" value="#[flowVars.offset]" />
				<http:query-param paramName="limit" value="#[flowVars.limit]" />
				<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
			</http:request-builder>
			<http:success-status-code-validator values="0..599" />
		</http:request>
		<choice doc:name="Choice">
			<when expression="#[message.inboundProperties['http.status']=='200']">
				<dw:transform-message doc:name="Reduce Exchange Assets">
					<dw:set-payload resource="classpath:transformations/reduce-exchange-assets.dwl" />
				</dw:transform-message>
				<dw:transform-message doc:name="Append page to assetsList">
					<dw:set-variable resource="classpath:variables/update-assetsList-variable.dwl" variableName="assetsList" />
				</dw:transform-message>
				<choice doc:name="fetch next page">
					<when expression="#[payload.size() &gt; 0]">
						<dw:transform-message doc:name="Update offset variable">
							<dw:set-variable resource="classpath:variables/update-offset-variable.dwl" variableName="offset" />
						</dw:transform-message>
						<flow-ref name="getExchangePage" doc:name="getAssetsFromExchange" />
					</when>
					<otherwise>
						<logger level="INFO" doc:name="Logger" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<logger message="Http status from getTotalAssets call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
			</otherwise>
		</choice>
	</flow>
	<flow name="getTotalUsers">
		<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.accountsApi.uri}/#[flowVars.rootOrgId]/members?limit=10&amp;offset=0" method="GET"
			doc:name="getTotalUsers">
			<http:request-builder>
				<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
			</http:request-builder>
			<http:success-status-code-validator values="0..599" />
		</http:request>
		<choice doc:name="Choice">
			<when expression="#[message.inboundProperties['http.status']=='200']">
				<dw:transform-message doc:name="Set usersTotal variable">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.total default 0 as :number]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<logger message="Http status from getTotalUsers call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
			</otherwise>
		</choice>
	</flow>
	<flow name="getApplications">
		<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.apiplatform.uri}/#[flowVars.rootOrgId]/applications?ascending=true&amp;amp;limit=10&amp;amp;offset=0"
			method="GET" doc:name="getTotalApps">
			<http:request-builder>
				<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
			</http:request-builder>
			<http:success-status-code-validator values="0..599" />
		</http:request>
		<choice doc:name="Choice">
			<when expression="#[message.inboundProperties['http.status']=='200']">
				<dw:transform-message doc:name="Set appsTotal variable">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.total default 0 as :number]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<logger message="Http status from getApplications call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
			</otherwise>
		</choice>
	</flow>
	<flow name="getTotalNumberOfAPIDefinitions">
		<dw:transform-message doc:name="Init totalNumberOfAPIDefinitions variable">
			<dw:input-payload mimeType="application/java" />
			<dw:set-variable resource="classpath:variables/init-totalNumberOfAPIDefinitions-variable.dwl" variableName="totalNumberOfAPIDefinitions" />
		</dw:transform-message>
		<foreach collection="#[flowVars.orgIdList]" doc:name="For Each">
			<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.apiplatform.uri}/#[payload]/apis" method="GET" doc:name="getApisPerOrg">
				<http:request-builder>
					<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
				</http:request-builder>
				<http:success-status-code-validator values="0..599" />
			</http:request>
			<choice doc:name="Choice">
				<when expression="#[message.inboundProperties['http.status']=='200']">
					<dw:transform-message doc:name="Update totalNumberOfAPIDefinitions">
						<dw:set-variable resource="classpath:variables/update-totalNumberOfAPIDefinitions-variable.dwl" variableName="totalNumberOfAPIDefinitions" />
					</dw:transform-message>
				</when>
				<otherwise>
					<logger message="Http status from getAPIsPerOrg call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
				</otherwise>
			</choice>
		</foreach>
		<set-payload value="#[flowVars.totalNumberOfAPIDefinitions]" doc:name="Set Payload with totalNumberOfAPIDefinitions variable" />
	</flow>
	<flow name="getTransactions">
		<dw:transform-message doc:name="Initialize processedCalls variable">
			<dw:input-payload mimeType="application/java" />
			<dw:set-variable resource="classpath:variables/init-processedCalls-variable.dwl" variableName="processedCalls" />
		</dw:transform-message>
		<foreach collection="#[flowVars.orgIdList]" doc:name="For Each">
			<dw:transform-message doc:name="Set currentOrgId and request message">
				<dw:input-payload mimeType="application/java" />
				<dw:set-payload resource="classpath:transformations/map-analytics-request.dwl" />
				<dw:set-variable resource="classpath:variables/set-currentOrgId-variable.dwl" variableName="currentOrgId" />
			</dw:transform-message>
			<logger message="${anypoint.analytics.uri}/#[flowVars.currentOrgId]/query and token is #[flowVars.anypointToken]" level="INFO" doc:name="Logger" />
			<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.analytics.uri}/#[flowVars['currentOrgId']]/query" method="POST"
				doc:name="GetAPICallMetricsForCurrentSubOrg">
				<http:request-builder>
					<http:header headerName="Authorization" value="Bearer #[flowVars['anypointToken']]" />
				</http:request-builder>
				<http:success-status-code-validator values="0..599" />
			</http:request>
			<choice doc:name="Choice">
				<when expression="#[message.inboundProperties['http.status']=='200']">
					<dw:transform-message doc:name="Update processedCalls variable">
						<dw:set-variable resource="classpath:variables/update-processedCalls-variable.dwl" variableName="processedCalls" />
					</dw:transform-message>
				</when>
				<otherwise>
					<logger message="Response code is #[message.inboundProperties['http.status']] and response is #[payload]" level="ERROR" doc:name="Logger" />
				</otherwise>
			</choice>
		</foreach>
		<set-payload value="#[flowVars.processedCalls]" doc:name="Set Payload with processedCalls variable" />
	</flow>
	<flow name="getRuntimeAppsStats">
		<dw:transform-message doc:name="Initialize variables">
			<dw:input-payload mimeType="application/java" />
			<dw:set-variable variableName="cloudhubUsageStatistics"><![CDATA[%dw 1.0
%output application/java
---
{}]]></dw:set-variable>
			<dw:set-variable variableName="onPremRuntimeUsageStatistics"><![CDATA[%dw 1.0
%output application/java
---
{}]]></dw:set-variable>
		</dw:transform-message>
		<foreach collection="#[flowVars.environments]" doc:name="For Each">
			<set-variable variableName="envId" value="#[payload.id]" doc:name="set envId" />
			<set-variable variableName="envName" value="#[payload.name]" doc:name="set envName" />
			<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.hybrid.uri}" method="GET" doc:name="getHybridApps">
				<http:request-builder>
					<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
					<http:header headerName="X-ANYPNT-ORG-ID" value="#[flowVars.rootOrgId]" />
					<http:header headerName="X-ANYPNT-ENV-ID" value="#[flowVars.envId]" />
				</http:request-builder>
				<http:success-status-code-validator values="0..599" />
			</http:request>
			<dw:transform-message doc:name="JSON to Object">
				<dw:set-payload resource="classpath:transformations/map-json-to-object.dwl" />
			</dw:transform-message>
			<choice doc:name="getHybridApps?">
				<when expression="#[message.inboundProperties.'http.status' == 200]">
					<dw:transform-message doc:name="Transform Message">
						<dw:set-variable variableName="onPremRuntimeUsageStatistics"><![CDATA[%dw 1.0
%output application/java
%var started = payload.data filter $.lastReportedStatus == "STARTED"
---
flowVars.onPremRuntimeUsageStatistics
++
{
	(flowVars.envName): sizeOf started
}]]></dw:set-variable>
					</dw:transform-message>
				</when>
				<otherwise>
					<logger message="Http status from getHybridApps call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
				</otherwise>
			</choice>
			<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.cloudhub.uri}" method="GET" doc:name="getCloudhubApps">
				<http:request-builder>
					<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
					<http:header headerName="X-ANYPNT-ENV-ID" value="#[flowVars.envId]" />
					<http:header headerName="Content-Type" value="application/json" />
				</http:request-builder>
				<http:success-status-code-validator values="0..599" />
			</http:request>
			<dw:transform-message doc:name="JSON to Object">
				<dw:set-payload resource="classpath:transformations/map-json-to-object.dwl" />
			</dw:transform-message>
			<choice doc:name="getCloudhubApps?">
				<when expression="#[message.inboundProperties.'http.status' == 200]">
					<dw:transform-message doc:name="Transform Message">
						<dw:set-variable variableName="cloudhubUsageStatistics"><![CDATA[%dw 1.0
%output application/java
%var started = payload filter $.status == "STARTED"
---
flowVars.cloudhubUsageStatistics ++ ((flowVars.envName): started groupBy $.workerType mapObject ( (v, k) ->
  (k): sum v.workers
) ++ {applicationCount: sizeOf started})
]]></dw:set-variable>
					</dw:transform-message>
				</when>
				<otherwise>
					<logger message="Http status from getCloudhubApps call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
				</otherwise>
			</choice>
		</foreach>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	onPremRuntimeUsageStatistics: flowVars.onPremRuntimeUsageStatistics,
	cloudhubUsageStatistics: flowVars.cloudhubUsageStatistics
}]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="getPoliciesBeingUsed">
		<dw:transform-message doc:name="Initialize variables">
			<dw:input-payload mimeType="application/java" />
			<dw:set-variable resource="classpath:variables/init-policiesBeingUsed-variable.dwl" variableName="policiesBeingUsed" />
			<dw:set-variable resource="classpath:variables/set-policyApiList-variable.dwl" variableName="policyApiList" />
            <dw:set-variable resource="classpath:variables/set-totalNumberOfUnsecureAPIs-variable.dwl" variableName="totalNumberOfUnsecureAPIs"/>
            <dw:set-variable resource="classpath:variables/init-totalNumberOfUndocumentedAPIs-variable.dwl" variableName="totalNumberOfUndocumentedAPIs"/>
		</dw:transform-message>
		<foreach collection="#[flowVars.orgIdList]" doc:name="For Each">
			<dw:transform-message doc:name="Set currentOrgId variable">
				<dw:input-payload mimeType="application/java" />
				<dw:set-variable resource="classpath:variables/set-currentOrgId-variable.dwl" variableName="currentOrgId" />
			</dw:transform-message>
			<flow-ref name="getPolicyTemplates" doc:name="getPolicyTemplates" />
			<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.apiplatform.uri}/#[flowVars.currentOrgId]/apis" method="GET" doc:name="getApisPerOrg">
				<http:request-builder>
					<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
				</http:request-builder>
				<http:success-status-code-validator values="0..599" />
			</http:request>
			<dw:transform-message doc:name="JSON to Object">
				<dw:set-payload resource="classpath:transformations/map-json-to-object.dwl" />
			</dw:transform-message>
			<choice doc:name="Choice">
				<when expression="#[message.inboundProperties['http.status']=='200' &amp;&amp; payload.apis.size() &gt; 0]">
					<dw:transform-message doc:name="Map API id and version">
						<dw:input-payload mimeType="application/java" />
						<dw:set-payload resource="classpath:transformations/map-api-id-and-version.dwl" />
                        <dw:set-variable resource="classpath:variables/update-totalNumberOfUndocumentedAPIs-variable.dwl" variableName="totalNumberOfUndocumentedAPIs"/>
					</dw:transform-message>
					<foreach doc:name="For Each">
						<dw:transform-message doc:name="Set apiId and apiVersion variables">
							<dw:input-payload mimeType="application/java" />
							<dw:set-variable resource="classpath:variables/set-apiId-variable.dwl" variableName="apiId" />
							<dw:set-variable resource="classpath:variables/set-apiVersionId-variable.dwl" variableName="apiVersionId" />
						</dw:transform-message>
						<flow-ref name="getPoliciesForAPIVersion" doc:name="getPoliciesForAPIVersion" />
					</foreach>

				</when>
				<otherwise>
					<logger message="Http status from getAPIsPerOrg call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
				</otherwise>
			</choice>
		</foreach>
		<dw:transform-message doc:name="Map applied policies">
			<dw:set-payload resource="classpath:transformations/map-applied-policies.dwl" />
		</dw:transform-message>
	</flow>
	<flow name="getPolicyTemplates">
		<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.apiplatform.uri}/#[flowVars.currentOrgId]/policy-templates" method="GET"
			doc:name="getPolicyTemplateNames">
			<http:request-builder>
				<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
			</http:request-builder>
			<http:success-status-code-validator values="0..599" />
		</http:request>
		<choice doc:name="Choice">
			<when expression="#[message.inboundProperties['http.status']=='200']">
				<dw:transform-message doc:name="Set policyTemplates variable">
					<dw:set-variable resource="classpath:variables/set-policy-templates-variable.dwl" variableName="policyTemplates" />
				</dw:transform-message>
			</when>
			<otherwise>
				<logger message="Http status from getPolicyTemplates call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
			</otherwise>
		</choice>
	</flow>
	<flow name="getPoliciesForAPIVersion">
		<http:request config-ref="Anypoint_HTTPS_Connector" path="${anypoint.apiplatform.uri}/#[flowVars.currentOrgId]/apis/#[flowVars.apiId]/versions/#[flowVars.apiVersionId]/policies"
			method="GET" doc:name="getPolicies">
			<http:request-builder>
				<http:header headerName="Authorization" value="Bearer #[flowVars.anypointToken]" />
			</http:request-builder>
			<http:success-status-code-validator values="0..599" />
		</http:request>
		<dw:transform-message doc:name="JSON to Object">
			<dw:set-payload resource="classpath:transformations/map-json-to-object.dwl" />
		</dw:transform-message>
		<choice doc:name="http status eq 200">
            <when expression="#[message.inboundProperties['http.status']=='200']">
                <choice doc:name="has policies">
                    <when expression="#[payload.size() &gt; 0]">
                        <dw:transform-message doc:name="Update variables">
                            <dw:set-variable resource="classpath:variables/update-policiesBeingUsed-variable.dwl" variableName="policiesBeingUsed"/>
                            <dw:set-variable resource="classpath:variables/update-policyApiList-variable.dwl" variableName="policyApiList"/>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Update totalNumberOfUnsecureAPIs variable">
                            <dw:set-variable resource="classpath:variables/update-totalNumberOfUnsecureAPIs-variable.dwl" variableName="totalNumberOfUnsecureAPIs"/>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
			<otherwise>
				<logger message="Http status from getPoliciesForAPIVersion call: #[message.inboundProperties['http.status']] , ignoring for now" level="ERROR" doc:name="Logger" />
			</otherwise>
		</choice>
	</flow>
</mule>
